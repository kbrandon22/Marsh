fit <- lm(fish_df_wide$Biomass_Summer ~ I(seq_along(fish_df_wide$Biomass_Summer)))
fitted_values <- predict(fit)
lines(density(fish_df_wide$Biomass_Summer), col = "red", lwd = 2)
hist(fish_df_wide$Biomass_Fall, prob = TRUE)
fit <- lm(fish_df_wide$Biomass_Fall ~ I(seq_along(fish_df_wide$Biomass_Fall)))
fitted_values <- predict(fit)
lines(density(fish_df_wide$Biomass_Fall), col = "red", lwd = 2)
hist(fish_df_wide$Biomass_Winter, prob = TRUE)
fit <- lm(fish_df_wide$Biomass_Winter ~ I(seq_along(fish_df_wide$Biomass_Winter)))
fitted_values <- predict(fit)
lines(density(fish_df_wide$Biomass_Winter), col = "red", lwd = 2)
shapiro.test(fish_df_wide$Biomass_Spring)                 #Not normally distributed
shapiro.test(fish_df_wide$Biomass_Summer)                 #Not normally distributed
shapiro.test(fish_df_wide$Biomass_Fall)
shapiro.test(fish_df_wide$Biomass_Winter)                 #Not normally distributed
#3) Transform seasons with skewed biomass
fish_df_wide <- fish_df_wide %>%
mutate(
Log_Biomass_Spring = log10(Biomass_Spring),
Log_Biomass_Summer = log10(Biomass_Summer),
Log_Biomass_Winter = log10(Biomass_Winter)
)
fish_df_wide
#4) Reassess normality
shapiro.test(fish_df_wide$Log_Biomass_Spring)             #Still not normally distributed, try different transformation
shapiro.test(fish_df_wide$Log_Biomass_Summer)
shapiro.test(fish_df_wide$Log_Biomass_Winter)
shapiro.test(fish_df_wide$Log_Biomass_Spring)             #Still not normally distributed, try different transformation
#4) Reassess normality
hist(fish_df_wide$Log_Biomass_Spring, prob = TRUE)
fit <- lm(fish_df_wide$Log_Biomass_Spring ~ I(seq_along(fish_df_wide$Log_Biomass_Spring)))
fitted_values <- predict(fit)
lines(density(fish_df_wide$Log_Biomass_Spring), col = "red", lwd = 2)
hist(fish_df_wide$Log_Biomass_Summer, prob = TRUE)
fit <- lm(fish_df_wide$Log_Biomass_Summer ~ I(seq_along(fish_df_wide$Log_Biomass_Summer)))
fitted_values <- predict(fit)
lines(density(fish_df_wide$Log_Biomass_Summer), col = "red", lwd = 2)
hist(fish_df_wide$Log_Biomass_Winter, prob = TRUE)
fit <- lm(fish_df_wide$Log_Biomass_Winter ~ I(seq_along(fish_df_wide$Log_Biomass_Winter)))
fitted_values <- predict(fit)
lines(density(fish_df_wide$Log_Biomass_Winter), col = "red", lwd = 2)
#5) Transform seasons with skewed biomass (round 2)
#Because spring biomass is right skewed and log transformation didn't work, try square root transformation
fish_df_wide <- fish_df_wide %>%
mutate(
Sqrt_Biomass_Spring = sqrt(Biomass_Spring)
)
fish_df_wide
hist(fish_df_wide$Sqrt_Biomass_Spring, prob = TRUE)
fit <- lm(fish_df_wide$Sqrt_Biomass_Spring ~ I(seq_along(fish_df_wide$Sqrt_Biomass_Spring)))
fitted_values <- predict(fit)
lines(density(fish_df_wide$Sqrt_Biomass_Spring), col = "red", lwd = 2)
shapiro.test(fish_df_wide$Sqrt_Biomass_Spring)
#----------
#4. Run ANOVAs
spring_mod <- aov(Sqrt_Biomass_Spring ~ Outfalls + Dist + Area, data = fish_df_wide)
summary(spring_mod)
summer_mod <- aov(Log_Biomass_Summer ~ Outfalls + Dist + Area, data = fish_df_wide)
summary(summer_mod)
fall_mod <- aov(Biomass_Fall ~ Outfalls + Dist + Area, data = fish_df_wide)
fall_mod
summary(fall_mod)
winter_mod <- aov(Log_Biomass_Winter ~ Outfalls + Dist + Area, data = fish_df_wide)
summary(winter_mod)
#OR
#a. Run Kruskal-Wallis tests on non-transformed data
#1) Spring
spring_out_mod <- kruskal.test(Biomass_Spring ~ Outfalls, data = fish_df_wide)
spring_out_mod
spring_dist_mod <- kruskal.test(Biomass_Spring ~ Dist, data = fish_df_wide)
spring_dist_mod
spring_area_mod <- kruskal.test(Biomass_Spring ~ Area, data = fish_df_wide)
spring_area_mod
#2) Summer
summer_out_mod <- kruskal.test(Biomass_summer ~ Outfalls, data = fish_df_wide)
summer_out_mod
#2) Summer
summer_out_mod <- kruskal.test(Biomass_Summer ~ Outfalls, data = fish_df_wide)
summer_out_mod
summer_dist_mod <- kruskal.test(BiomassSsummer ~ Dist, data = fish_df_wide)
summer_dist_mod
summer_dist_mod <- kruskal.test(Biomass_Summer ~ Dist, data = fish_df_wide)
summer_dist_mod
summer_area_mod <- kruskal.test(Biomass_Summer ~ Area, data = fish_df_wide)
summer_area_mod
#3) winter
winter_out_mod <- kruskal.test(Biomass_w=Winter ~ Outfalls, data = fish_df_wide)
#3) winter
winter_out_mod <- kruskal.test(Biomass_Winter ~ Outfalls, data = fish_df_wide)
winter_out_mod
winter_dist_mod <- kruskal.test(Biomass_Winter ~ Dist, data = fish_df_wide)
winter_dist_mod
winter_area_mod <- kruskal.test(Biomass_Winter ~ Area, data = fish_df_wide)
winter_area_mod
fish_df_wide
#b. Homoscedasticity
spring_homo <- bartlett.test(Biomass_Spring ~ Site, data = fish_df_wide)
Biomass_Spring
fish_df_wide$Biomass_Spring
#b. Homoscedasticity
spring_homo <- bartlett.test(Biomass_Spring ~ Site, data = fish_df_wide)
fish_df_wide$Site
fish_df
#b. Homoscedasticity
spring_homo <- bartlett.test(Median_Biomass ~ Season, data = fish_df_long)
spring_homo
levene <- leveneTest(Median_Biomass ~ Season, data = fish_df_long)
levene
season_biomass
#----------
#2. Visualize relationships between variables together
#a. Mutate data frame
fish_df_long <- fish_df %>%
pivot_longer(cols = Spring:Winter, names_to = "Season", values_to = "Median_Biomass") %>%
dplyr::select(Site, Season, Median_Biomass, Outfalls, Dist, Area) %>%
mutate(Season = factor(Season, levels = c("Spring", "Summer", "Fall", "Winter"))) %>%
arrange(Season)
fish_df_long
fish_df_long <- fish_df_long %>%
mutate(Season = factor(Season,
levels = c("Spring", "Summer", "Fall", "Winter")))
#b. Plot relationships
#1) Seasonal biomass
season_biomass <- ggplot(fish_df_long, aes(x = Season, y = Median_Biomass, fill = Season)) +
geom_boxplot() + geom_point(size=2) +
theme_minimal() +
labs(title = "Seasonal Biomass",
x = "Season",
y = "Biomass (g)") +
theme(plot.title = element_text(size = 12, hjust = 0.5),
axis.text.x = element_text(size = 10)) +
theme(legend.position = "none")
season_biomass
#----------
#5. Check model assumptions
#a. Normality of residuals
par(mfrow=c(1,1))
plot(spring_mod, 2)
plot(summer_mod, 2)
plot(fall_mod, 2)
plot(winter_mod, 2)
shapiro.test(residuals(spring_mod))
shapiro.test(residuals(summer_mod))
shapiro.test(residuals(fall_mod))
shapiro.test(residuals(winter_mod))
#b. Homoscedasticity
plot(spring_mod, 1)
plot(summer_mod, 1)
plot(fall_mod, 1)
plot(winter_mod, 1)
shapiro.test(residuals(fall_mod))
#----------
#6. Transform data that violated normality assumption and rerun models
#a. Transform fall biomass
fish_df_wide <- fish_df_wide %>%
mutate(
Log_Biomass_Fall = log10(Biomass_Fall)
)
fish_df_wide
#b. Assess normality post-transformation
hist(fish_df_wide$Log_Biomass_Fall, prob = TRUE)
fit <- lm(fish_df_wide$Log_Biomass_Fall ~ I(seq_along(fish_df_wide$Log_Biomass_Fall)))
fitted_values <- predict(fit)
lines(density(fish_df_wide$Log_Biomass_Fall), col = "red", lwd = 2)
shapiro.test(fish_df_wide$Log_Biomass_Fall)
#c. Refit model
fall_mod <- aov(Log_Biomass_Fall ~ Outfalls + Dist + Area, data = fish_df_wide)
summary(fall_mod)
#d. Check model assumptions
shapiro.test(residuals(fall_mod))
#d. Check model assumptions
plot(fall_mod, 2)
#2) Homoscedasticity
plot(fall_mod, 1)
#----------
#2. Check assumptions
#a. Normality
shapiro.test(fish_df$Biomass)
#----------
#3. Run ANOVA
annual_mod <- aov(Biomass ~ Outfalls + Dist + Area, data = fish_df)
summary(annual_mod)
#----------
#4. Run ANOVAs
spring_mod <- aov(Sqrt_Biomass_Spring ~ Outfalls + Dist + Area, data = fish_df_wide)
summary(spring_mod)
summer_mod <- aov(Log_Biomass_Summer ~ Outfalls + Dist + Area, data = fish_df_wide)
summary(summer_mod)
summary(winter_mod)
summary(fall_mod)
#1. Visualize data
#a. Median biomass by site
ggplot(fish_df, aes(x = Site, y = Biomass)) +
geom_bar(stat = "identity", fill="gray88", col="black") +
xlab("Site") + ylab("Annual Median Fish Biomass (g)") +
ggtitle("Annual Median Fish Biomass by Site") +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, hjust=1),
plot.title = element_text(hjust = 0.5)) +
scale_y_continuous(expand = expansion(mult = c(0, 0.07)))
#b. Number of outfalls within 2km of site
#1) Bar plot
out_bar <- ggplot(fish_df, aes(x = Site, y = Outfalls)) +
geom_bar(stat = "identity", fill="gray88", col="black") +
xlab("Site") + ylab("Number of Outfalls within 2km") +
ggtitle("Number of Outfalls within 2km of Site") +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, hjust=1),
plot.title = element_text(hjust = 0.5)) +
scale_y_continuous(expand = expansion(mult = c(0, 0.07)))
#2) Scatterplot
out_scat <- ggplot(fish_df, aes(x = Outfalls, y = Biomass)) +
geom_point(aes(color = Site), size = 3) +
geom_smooth(method = "lm", se = FALSE, color = "black", linewidth = 0.5) +
labs(title = "Site Biomass by Number of Outfalls",
x = "Number of Outfalls within 2km",
y = "Annual Biomass (g)") +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5))
#c. Average distance to outfalls
#1) Bar plot
dist_bar <- ggplot(fish_df, aes(x = Site, y = Dist)) +
geom_bar(stat = "identity", fill="gray88", col="black") +
xlab("Site") + ylab("Average Distance to Outfalls (km)") +
ggtitle("Average Distance to Outfalls") +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, hjust=1),
plot.title = element_text(hjust = 0.5)) +
scale_y_continuous(expand = expansion(mult = c(0, 0.07)))
#2) Scatterplot
dist_scat <- ggplot(fish_df, aes(x = Dist, y = Biomass)) +
geom_point(aes(color = Site), size = 3) +
geom_smooth(method = "lm", se = FALSE, color = "black", linewidth = 0.5) +
labs(title = "Site Biomass by Average Distance to Outfall",
x = "Average Distance to Outfall (km)",
y = "Annual Biomass (g)") +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5))
#d. Wetland area
#1) Bar plot
area_bar <- ggplot(fish_df, aes(x = Site, y = Area)) +
geom_bar(stat = "identity", fill="gray88", col="black") +
xlab("Site") + ylab("Wetland Area (ha))") +
ggtitle("Wetland Area") +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, hjust=1),
plot.title = element_text(hjust = 0.5)) +
scale_y_continuous(expand = expansion(mult = c(0, 0.07)))
#2) Scatterplot
area_scat <- ggplot(fish_df, aes(x = Area, y = Biomass)) +
geom_point(aes(color = Site), size = 3) +
geom_smooth(method = "lm", se = FALSE, color = "black", linewidth = 0.5) +
labs(title = "Site Biomass by Wetland Area",
x = "Wetland Area (ha)",
y = "Annual Biomass (g)") +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5))
out_bar
out_scat
dist_bar
area_bar
dist_scat
#2) Scatterplot
dist_scat <- ggplot(fish_df, aes(x = Dist, y = Biomass)) +
geom_point(size = 3) +
geom_smooth(method = "lm", se = FALSE, color = "black", linewidth = 0.5) +
labs(title = "Site Biomass by Average Distance to Outfall",
x = "Average Distance to Outfall (km)",
y = "Annual Biomass (g)") +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5))
dist_scat
grid.arrange(out_scat, dist_scat, area_scat, ncol=2)
#2) Scatterplot
area_scat <- ggplot(fish_df, aes(x = Area, y = Biomass)) +
geom_point(size = 1) +
geom_smooth(method = "lm", se = FALSE, color = "black", linewidth = 0.5) +
labs(title = "Site Biomass by Wetland Area",
x = "Wetland Area (ha)",
y = "Annual Biomass (g)") +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5))
#2) Scatterplot
out_scat <- ggplot(fish_df, aes(x = Outfalls, y = Biomass)) +
geom_point(size = 1) +
geom_smooth(method = "lm", se = FALSE, color = "black", linewidth = 0.5) +
labs(title = "Site Biomass by Number of Outfalls",
x = "Number of Outfalls within 2km",
y = "Annual Biomass (g)") +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5))
#2) Scatterplot
dist_scat <- ggplot(fish_df, aes(x = Dist, y = Biomass)) +
geom_point(size = 1) +
geom_smooth(method = "lm", se = FALSE, color = "black", linewidth = 0.5) +
labs(title = "Site Biomass by Average Distance to Outfall",
x = "Average Distance to Outfall (km)",
y = "Annual Biomass (g)") +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5))
grid.arrange(out_scat, dist_scat, area_scat, ncol=2)
#1. Visualize seasonal relationships between variables individually
#a. Number of outfalls within 2 km
spring_biomass_out <- ggplot(fish_df, aes(x = Outfalls, y = Spring)) +
geom_point() + theme_bw() +
geom_smooth(col = "red", se=FALSE, method="lm") +
xlab("Number outfalls within 2km") + ylab("Spring biomass") +
ggtitle("Spring Biomass and Outfalls") + theme(plot.title = element_text(hjust = 0.5))
summer_biomass_out <- ggplot(fish_df, aes(x = Outfalls, y = Summer)) +
geom_point() +  theme_bw() +
geom_smooth(col = "red", se=FALSE, method="lm") +
xlab("Number outfalls within 2km") + ylab("Summer biomass") +
ggtitle("Summer Biomass and Outfalls") + theme(plot.title = element_text(hjust = 0.5))
fall_biomass_out <- ggplot(fish_df, aes(x = Outfalls, y = Fall)) +
geom_point() + theme_bw() +
geom_smooth(col = "red", se=FALSE, method="lm") +
xlab("Number outfalls within 2km") + ylab("Fall Biomass") +
ggtitle("Fall Biomass and Outfalls") + theme(plot.title = element_text(hjust = 0.5))
winter_biomass_out <- ggplot(fish_df, aes(x = Outfalls, y = Winter)) +
geom_point() + theme_bw() +
geom_smooth(col = "red", se=FALSE, method="lm") +
xlab("Number outfalls within 2km") + ylab("winter Biomass") +
ggtitle("winter Biomass and Outfalls") + theme(plot.title = element_text(hjust = 0.5))
grid.arrange(spring_biomass_out, summer_biomass_out, fall_biomass_out, winter_biomass_out, ncol=2)
#2) Scatterplot
out_scat <- ggplot(fish_df, aes(x = Outfalls, y = Biomass)) +
geom_point(size = 1.5) +
geom_smooth(method = "lm", se = FALSE, color = "red", linewidth = 0.5) +
labs(title = "Site Biomass by Number of Outfalls",
x = "Number of Outfalls within 2km",
y = "Annual Biomass (g)") +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5))
#2) Scatterplot
dist_scat <- ggplot(fish_df, aes(x = Dist, y = Biomass)) +
geom_point(size = 1.5) +
geom_smooth(method = "lm", se = FALSE, color = "red", linewidth = 0.5) +
labs(title = "Site Biomass by Average Distance to Outfall",
x = "Average Distance to Outfall (km)",
y = "Annual Biomass (g)") +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5))
#2) Scatterplot
area_scat <- ggplot(fish_df, aes(x = Area, y = Biomass)) +
geom_point(size = 1.5) +
geom_smooth(method = "lm", se = FALSE, color = "red", linewidth = 0.5) +
labs(title = "Site Biomass by Wetland Area",
x = "Wetland Area (ha)",
y = "Annual Biomass (g)") +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5))
grid.arrange(out_scat, dist_scat, area_scat, ncol=2)
#2) Scatterplot
area_scat <- ggplot(fish_df, aes(x = Area, y = Biomass)) +
geom_point(size = 1.5) +
geom_smooth(method = "lm", se = FALSE, color = "red", linewidth = 1) +
labs(title = "Site Biomass by Wetland Area",
x = "Wetland Area (ha)",
y = "Annual Biomass (g)") +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5))
#2) Scatterplot
dist_scat <- ggplot(fish_df, aes(x = Dist, y = Biomass)) +
geom_point(size = 1.5) +
geom_smooth(method = "lm", se = FALSE, color = "red", linewidth = 1) +
labs(title = "Site Biomass by Average Distance to Outfall",
x = "Average Distance to Outfall (km)",
y = "Annual Biomass (g)") +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5))
#2) Scatterplot
out_scat <- ggplot(fish_df, aes(x = Outfalls, y = Biomass)) +
geom_point(size = 1.5) +
geom_smooth(method = "lm", se = FALSE, color = "red", linewidth = 1) +
labs(title = "Site Biomass by Number of Outfalls",
x = "Number of Outfalls within 2km",
y = "Annual Biomass (g)") +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5))
grid.arrange(out_scat, dist_scat, area_scat, ncol=2)
winter_biomass_out <- ggplot(fish_df, aes(x = Outfalls, y = Winter)) +
geom_point() + theme_bw() +
geom_smooth(col = "red", se=FALSE, method="lm") +
xlab("Number outfalls within 2km") + ylab("Winter Biomass") +
ggtitle("Winter Biomass and Outfalls") + theme(plot.title = element_text(hjust = 0.5))
grid.arrange(spring_biomass_out, summer_biomass_out, fall_biomass_out, winter_biomass_out, ncol=2)
#1. Visualize seasonal relationships between variables individually
#a. Number of outfalls within 2 km
spring_biomass_out <- ggplot(fish_df, aes(x = Outfalls, y = Spring)) +
geom_point() + theme_bw() +
geom_smooth(col = "red", se=FALSE, method="lm") +
xlab("Number outfalls within 2km") + ylab("Spring biomass (g)") +
ggtitle("Spring Biomass and Outfalls") + theme(plot.title = element_text(hjust = 0.5))
summer_biomass_out <- ggplot(fish_df, aes(x = Outfalls, y = Summer)) +
geom_point() +  theme_bw() +
geom_smooth(col = "red", se=FALSE, method="lm") +
xlab("Number outfalls within 2km") + ylab("Summer biomass (g)") +
ggtitle("Summer Biomass and Outfalls") + theme(plot.title = element_text(hjust = 0.5))
fall_biomass_out <- ggplot(fish_df, aes(x = Outfalls, y = Fall)) +
geom_point() + theme_bw() +
geom_smooth(col = "red", se=FALSE, method="lm") +
xlab("Number outfalls within 2km") + ylab("Fall Biomass (g)") +
ggtitle("Fall Biomass and Outfalls") + theme(plot.title = element_text(hjust = 0.5))
winter_biomass_out <- ggplot(fish_df, aes(x = Outfalls, y = Winter)) +
geom_point() + theme_bw() +
geom_smooth(col = "red", se=FALSE, method="lm") +
xlab("Number outfalls within 2km") + ylab("Winter Biomass (g)") +
ggtitle("Winter Biomass and Outfalls") + theme(plot.title = element_text(hjust = 0.5))
grid.arrange(spring_biomass_out, summer_biomass_out, fall_biomass_out, winter_biomass_out, ncol=2)
#b. Average distance to outfall
spring_biomass_dist <- ggplot(fish_df, aes(x = Dist, y = Spring)) +
geom_point() + theme_bw() + geom_smooth(col = "red", se=FALSE, method="lm") +
xlab("Average distance to outfall (km)") + ylab("Spring biomass (g)") +
ggtitle("Spring Biomass and Average Distance to Outfalls") + theme(plot.title = element_text(hjust = 0.5))
summer_biomass_dist <- ggplot(fish_df, aes(x = Dist, y = Summer)) +
geom_point() + theme_bw() + geom_smooth(col = "red", se=FALSE, method="lm") +
xlab("Average distance to outfall (km)") + ylab("Summer biomass (g)") +
ggtitle("Summer Biomass and Average Distance to Outfalls") + theme(plot.title = element_text(hjust = 0.5))
fall_biomass_dist <- ggplot(fish_df, aes(x = Dist, y = Fall)) +
geom_point() + theme_bw() + geom_smooth(col = "red", se=FALSE, method="lm") +
xlab("Average distance to outfall (km)") + ylab("Fall Biomass (g)") +
ggtitle("Fall Biomass and Average Distance to Outfalls") + theme(plot.title = element_text(hjust = 0.5))
winter_biomass_dist <- ggplot(fish_df, aes(x = Dist, y = Winter)) +
geom_point() + theme_bw() + geom_smooth(col = "red", se=FALSE, method="lm") +
xlab("Average distance to outfall (km)") + ylab("Winter Biomass (g)") +
ggtitle("Winter Biomass and Average Distance to Outfalls") + theme(plot.title = element_text(hjust = 0.5))
grid.arrange(spring_biomass_dist, summer_biomass_dist, fall_biomass_dist, winter_biomass_dist, ncol=2)
#c. Wetland area
spring_biomass_area <- ggplot(fish_df, aes(x = Area, y = Spring)) +
geom_point() + theme_bw() + geom_smooth(col = "red", se=FALSE, method="lm") +
xlab("Wetland area (ha)") + ylab("Spring Biomass (g)") +
ggtitle("Spring Biomass and Wetland Area") + theme(plot.title = element_text(hjust = 0.5))
summer_biomass_area <- ggplot(fish_df, aes(x = Area, y = Summer)) +
geom_point() + theme_bw() + geom_smooth(col = "red", se=FALSE, method="lm") +
xlab("Wetland area (ha)") + ylab("Summer Biomass (g)") +
ggtitle("Summer Biomass and Wetland Area") + theme(plot.title = element_text(hjust = 0.5))
fall_biomass_area <- ggplot(fish_df, aes(x = Area, y = Fall)) +
geom_point() + theme_bw() + geom_smooth(col = "red", se=FALSE, method="lm") +
xlab("Wetland area (ha)") + ylab("Fall Biomass (g)") +
ggtitle("Fall Biomass and Wetland Area") + theme(plot.title = element_text(hjust = 0.5))
winter_biomass_area <- ggplot(fish_df, aes(x = Area, y = Winter)) +
geom_point() + theme_bw() + geom_smooth(col = "red", se=FALSE, method="lm") +
xlab("Wetland area (ha)") + ylab("Winter Biomass (g)") +
ggtitle("Winter Biomass and Wetland Area") + theme(plot.title = element_text(hjust = 0.5))
grid.arrange(spring_biomass_area, summer_biomass_area, fall_biomass_area, winter_biomass_area, ncol=2)
#b. Plot relationships
#1) Seasonal biomass
season_biomass <- ggplot(fish_df_long, aes(x = Season, y = Median_Biomass, fill = Season)) +
geom_boxplot() + geom_point(size=2) +
theme_minimal() +
labs(title = "Seasonal Biomass",
x = "Season",
y = "Biomass (g)") +
theme(plot.title = element_text(size = 12, hjust = 0.5),
axis.text.x = element_text(size = 10)) +
theme(legend.position = "none")
season_biomass
#b. Plot relationships
#1) Seasonal biomass
season_biomass <- ggplot(fish_df_long, aes(x = Season, y = Median_Biomass, fill = Season)) +
geom_boxplot() + geom_point(size=2) +
theme_minimal() +
labs(title = "Seasonal Biomass",
x = "Season",
y = "Biomass (g)") +
theme(plot.title = element_text(size = 16, hjust = 0.5),
axis.text.x = element_text(size = 10)) +
theme(legend.position = "none")
season_biomass
#b. Plot relationships
#1) Seasonal biomass
season_biomass <- ggplot(fish_df_long, aes(x = Season, y = Median_Biomass, fill = Season)) +
geom_boxplot() + geom_point(size=2) +
theme_bw() +
labs(title = "Seasonal Biomass",
x = "Season",
y = "Biomass (g)") +
theme(plot.title = element_text(size = 16, hjust = 0.5),
axis.text.x = element_text(size = 10)) +
theme(legend.position = "none")
season_biomass
library(unmarked)
library(AICcmodavg)
library(mice)
library(tidyr)
library(dplyr)
library(stringr)
library(fuzzyjoin)
library(tidyverse)
library(combinat)
library(reshape2)
library(coda)
library(formattable)
library(ggplot2)
library(car)
library(stats)
library(factoextra)
library(glmnet)
library(MASS)
library(mgcv)
library(caret)
library(parallel)
library(doParallel)
library(foreach)
library(usethis)
#1. Set seed for reproducibility
set.seed(500)
#2. Set working directory
setwd("C:\\Users\\Kristin\\Documents\\Multispecies Occupancy\\Data Analysis\\R code\\Occupancy Models\\Marsh")
#3. Configure Git
use_git_config(user.name = "kbrandon22", user.email = "kristin.brandon22@gmail.com")
use_git()
